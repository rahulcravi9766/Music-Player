<1> Home fragment - collecting all the songs from the phone and saving it to songModel and then to listOfSongs
                    passing the listOfSongs, view and a int  to adapter

            view - it means to which view we have to go from the current fragment
            listOfSongs - list containing the id,name.duration,path etc of all the songs in the phone
            service is also connected to this fragment to pass the listOfSongs to allSongsList in the music service

<2> SongListAdapter - All the values passed as arguments are received as parameter in this class.
                      ie listOfSongs in the form of songModel, view and int.
                      This adapter will helps to show all the songs as a list
                      itemView = it is the view of recycle view layout in the xml
                      Navigation.findNavController(views) : we are navigating from home which is inside tab fragment.
                                                                                  so we use Navigation and pass views

                      The code for what happens when we click a list is also written here :
                      override fun onCustomItemClick(view: View, selectedSongPosition: Int
                      we navigate to another music fragment from this adapter :
                      var actions = TabFragmentDirections.actionTabFragmentToMusicPlayerFragment
                                     (selectedSongPosition,listOfSongs[selectedSongPosition].songId)
                      The selected song position and its id is send to the musicPlayer fragment

<3> MusicPlayerFragment - We have passed some arguments to this fragment but those are received through safe args
                          So the selected song position and its id is received using :
                                  private val args: MusicPlayerFragmentArgs by navArgs()
                                  args.songId, args.position


<4> SongDao - Here we write the query functions







